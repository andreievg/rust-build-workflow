name: Rust

on:
  workflow_dispatch:
   inputs:
      windows:
        description: 'Test on Windows'
        required: true 
        default: true
        type: boolean 
      mac:
        description: 'Test on Mac'
        required: true 
        default: true
        type: boolean
      linux:
        description: 'Test on Linux'
        required: true 
        default: true
        type: boolean
      front-end:
        description: 'Compile and Test Front End'
        required: true
        default: true 
        type: boolean
      electron:
        description: 'Compile and Test Electron'
        required: true
        default: true 
        type: boolean
      back-end-postgres:
        description: 'Compile and Test Back End (Postgres)'
        required: true
        default: true 
        type: boolean
      back-end-sqlite:
        description: 'Compile and Test Back End (Sqlite)'
        required: true
        default: true 
        type: boolean
  pull_request:
    paths: ["client/**"]

env:
  CARGO_TERM_COLOR: always

jobs:
  test-matrix:
    strategy:
      matrix:
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - env:
         EVENT_CONTEXT: ${{ fromJSON(format('[{0}{1}]', '"ubuntu-latest"', inputs.windows && '", windows-latest"' || '')) }}
        run : |
          echo $EVENT_CONTEXT
 