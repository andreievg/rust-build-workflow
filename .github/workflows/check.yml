name: check

on:
  workflow_call:
    inputs:
      os:
        required: true
        type: string

env: 
  TEST_BINARIES: ${{ format('test_binaries_{0}', inputs.os) }}

jobs:
  check:
    runs-on: ${{ inputs.os }}
    steps:
      - name: Checkout 
        uses: actions/checkout@v3

      - name: Cache
        # Caches dependencies for rust (debug or test), does not cache increments
        uses: Swatinem/rust-cache@v1

      - name: Build Tests on Window
        if: runner.os == 'Windows'
        env:
          OPENSSL_DIR: C:\Program Files\OpenSSL-Win64\
        run: |
          choco install openssl
          cargo build --tests --message-format=json > test_build_info.txt

      - name: Build Tests on Mac/Linux
        if: runner.os != 'Windows'
        run: cargo build --tests --message-format=json > test_build_info.txt

      - name: Compress Tests
        run: | 
          grep -o '"executable":"[^"]*' test_build_info.txt | grep -o '[^"]*$' > binary_file_list.txt
          mkdir binary_files
          cat binary_file_list.txt | xargs -I '{}' mv '{}' ./binary_files/.
        shell: bash
      
      - name: Archive Tests
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.TEST_BINARIES }}
          path: binary_files
  check2:
    runs-on: ${{ inputs.os }}
    needs: check
    steps:
      - name: Download Test Binaries
        uses: actions/download-artifact@v3
        with:
          name: ${{ env.TEST_BINARIES }}

      - name:  Execute Test Binaries
        run: | 
          node -e "
            const { readdirSync } = require('fs'); 
            const { execSync } = require('child_process');
            const readDirConf = { encoding: 'utf8' };
            const execSyncConf = { stdio: 'inherit' };
            readdirSync('.', readDirConf).map(executable => execSync(executable, execSyncConf));
          "

