name: check

on:
  workflow_call:
    inputs:
      os:
        required: true
        type: string
jobs:
  check:
    runs-on: ${{ inputs.os }}
    steps:
      - name: Checkout 
        uses: actions/checkout@v3

      - name: Cache
        # Caches dependencies for rust (debug or test), does not cache increments
        uses: Swatinem/rust-cache@v1

      - name: Build Tests on Window
        if: runner.os == 'Windows'
        run: |
          choco install openssl
          setx OPENSSL_DIR "C:\Program Files\OpenSSL-Win64\"
          cargo build --tests --message-format=json > test_build_info.txt

   - name: Build Tests on Mac/Linux
        if: runner.os != 'Windows'
        run: cargo build --tests --message-format=json > test_build_info.txt

      - name: Compress Tests
        run: | 
          grep -o '"executable":"[^"]*' test_build_info.txt | grep -o '[^"]*$' > binary_file_list.txt
          mkdir binary_files
          cat binary_file_list.txt | xargs -I '{}' mv '{}' ./binary_files/.
        shell: bash
      
      - name: Archive Tests
        uses: actions/upload-artifact@v3
        with:
          name: test_binaries
          path: binary_files
  check2:
    runs-on: ${{ inputs.os }}
    needs: check
    steps:
      - name: Download Test Binaries
        uses: actions/download-artifact@v3

      - name:  Setup tmate session
        if: runner.os == 'Windows'
        uses: mxschmitt/action-tmate@v3

      - name: Execute Test Binaries Linux
        if: runner.os == 'Linux'
        working-directory: test_binaries
        run: | 
          chmod +x *
          run-parts $(pwd)

      - name: Execute Test Binaries Mac
        if: runner.os == 'macOS'
        working-directory: test_binaries
        run: | 
          chmod +x *
          for f in *; do  "./$f" ; done

      # - name: Setup tmate session
      #   uses: mxschmitt/action-tmate@v3